// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üåç TPS TEMARIX CHAT ENDPOINT - CURADOR PO√âTICO MULTIL√çNGUE
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// Sistema h√≠brido inteligente com respostas culturalmente adaptadas
// Integra√ß√£o com translations-config.js + links afiliados sutis
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

const express = require('express');
const cors = require('cors');
const rateLimit = require('express-rate-limit');
const { LanguageUtils, CulturalResponseGenerator, LANGUAGE_CONFIGS } = require('./translations-config');

const app = express();

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üõ°Ô∏è MIDDLEWARE E CONFIGURA√á√ïES
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

app.use(cors({
    origin: ['http://localhost:3000', 'http://127.0.0.1:3000', 'http://localhost:8080'],
    credentials: true,
    methods: ['GET', 'POST', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'Accept-Language', 'X-User-Language']
}));

app.use(express.json({ limit: '10mb' }));

// Rate limiting para prote√ß√£o
const chatLimiter = rateLimit({
    windowMs: 1 * 60 * 1000, // 1 minuto
    max: 10, // 10 mensagens por minuto
    message: { error: 'Muitas mensagens. Respire fundo e tente novamente em instantes...' }
});

app.use('/api/chat', chatLimiter);

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üß† SISTEMA TEMARIX - CURADOR PO√âTICO INTELIGENTE
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

const TemarixCore = {
    // An√°lise emocional da mensagem
    analyzeEmotion(message, language = 'pt') {
        const emotions = {
            adventure: {
                pt: ['aventura', 'explorar', 'descobrir', 'adrenalina', 'radical', 'selvagem', 'mist√©rio'],
                en: ['adventure', 'explore', 'discover', 'thrill', 'wild', 'mystery', 'challenge'],
                es: ['aventura', 'explorar', 'descubrir', 'emoci√≥n', 'salvaje', 'misterio'],
                fr: ['aventure', 'explorer', 'd√©couvrir', 'frisson', 'sauvage', 'myst√®re'],
                de: ['abenteuer', 'entdecken', 'erforschen', 'nervenkitzel', 'wild', 'geheimnis'],
                it: ['avventura', 'esplorare', 'scoprire', 'brivido', 'selvaggio', 'mistero']
            },
            romance: {
                pt: ['rom√¢ntico', 'amor', 'lua de mel', 'casal', 'paix√£o', '√≠ntimo', 'dois'],
                en: ['romantic', 'love', 'honeymoon', 'couple', 'passion', 'intimate', 'together'],
                es: ['rom√°ntico', 'amor', 'luna de miel', 'pareja', 'pasi√≥n', '√≠ntimo'],
                fr: ['romantique', 'amour', 'lune de miel', 'couple', 'passion', 'intime'],
                de: ['romantisch', 'liebe', 'flitterwochen', 'paar', 'leidenschaft', 'intim'],
                it: ['romantico', 'amore', 'luna di miele', 'coppia', 'passione', 'intimo']
            },
            luxury: {
                pt: ['luxo', 'premium', 'primeiro', 'classe', 'exclusivo', 'vip', 'sofisticado'],
                en: ['luxury', 'premium', 'first', 'class', 'exclusive', 'vip', 'sophisticated'],
                es: ['lujo', 'premium', 'primera', 'clase', 'exclusivo', 'vip', 'sofisticado'],
                fr: ['luxe', 'premium', 'premi√®re', 'classe', 'exclusif', 'vip', 'sophistiqu√©'],
                de: ['luxus', 'premium', 'erste', 'klasse', 'exklusiv', 'vip', 'raffiniert'],
                it: ['lusso', 'premium', 'prima', 'classe', 'esclusivo', 'vip', 'sofisticato']
            },
            peace: {
                pt: ['relaxar', 'paz', 'tranquilo', 'spa', 'descanso', 'sereno', 'calma'],
                en: ['relax', 'peace', 'quiet', 'spa', 'rest', 'serene', 'calm'],
                es: ['relajar', 'paz', 'tranquilo', 'spa', 'descanso', 'sereno', 'calma'],
                fr: ['d√©tendre', 'paix', 'tranquille', 'spa', 'repos', 'serein', 'calme'],
                de: ['entspannen', 'frieden', 'ruhig', 'spa', 'ruhe', 'gelassen', 'ruhig'],
                it: ['rilassare', 'pace', 'tranquillo', 'spa', 'riposo', 'sereno', 'calma']
            }
        };

        const normalized = message.toLowerCase();
        let dominantEmotion = 'adventure'; // default
        let maxScore = 0;

        Object.entries(emotions).forEach(([emotion, translations]) => {
            const keywords = translations[language] || translations['en'] || [];
            let score = 0;
            
            keywords.forEach(keyword => {
                if (normalized.includes(keyword)) {
                    score += keyword.length; // palavras maiores = mais espec√≠ficas
                }
            });

            if (score > maxScore) {
                maxScore = score;
                dominantEmotion = emotion;
            }
        });

        return { emotion: dominantEmotion, intensity: Math.min(maxScore / 10, 1) };
    },

    // Detector de categoria de viagem
    detectTravelCategory(message, language = 'pt') {
        const categories = {
            flights: {
                pt: ['voo', 'voar', 'passagem', 'avi√£o', 'aeroporto', 'airline', 'decolagem'],
                en: ['flight', 'fly', 'airplane', 'airport', 'airline', 'takeoff', 'landing'],
                es: ['vuelo', 'volar', 'avi√≥n', 'aeropuerto', 'aerol√≠nea', 'despegue'],
                fr: ['vol', 'voler', 'avion', 'a√©roport', 'compagnie a√©rienne', 'd√©collage'],
                de: ['flug', 'fliegen', 'flugzeug', 'flughafen', 'fluggesellschaft', 'abflug'],
                it: ['volo', 'volare', 'aereo', 'aeroporto', 'compagnia aerea', 'decollo']
            },
            hotels: {
                pt: ['hotel', 'hospedagem', 'resort', 'pousada', 'quarto', 'suite', 'reserva'],
                en: ['hotel', 'accommodation', 'resort', 'room', 'suite', 'booking', 'lodge'],
                es: ['hotel', 'alojamiento', 'resort', 'habitaci√≥n', 'suite', 'reserva'],
                fr: ['h√¥tel', 'h√©bergement', 'resort', 'chambre', 'suite', 'r√©servation'],
                de: ['hotel', 'unterkunft', 'resort', 'zimmer', 'suite', 'buchung'],
                it: ['hotel', 'alloggio', 'resort', 'camera', 'suite', 'prenotazione']
            },
            transport: {
                pt: ['carro', 'transfer', 'transporte', 'taxi', 'uber', 'aluguel', 'pickup'],
                en: ['car', 'transfer', 'transport', 'taxi', 'uber', 'rental', 'pickup'],
                es: ['coche', 'transfer', 'transporte', 'taxi', 'uber', 'alquiler'],
                fr: ['voiture', 'transfert', 'transport', 'taxi', 'uber', 'location'],
                de: ['auto', 'transfer', 'transport', 'taxi', 'uber', 'mietwagen'],
                it: ['auto', 'transfer', 'trasporto', 'taxi', 'uber', 'noleggio']
            },
            cruise: {
                pt: ['cruzeiro', 'navio', 'cruise', 'mar', 'oceano', 'cabine', 'embarca√ß√£o'],
                en: ['cruise', 'ship', 'ocean', 'sea', 'cabin', 'vessel', 'maritime'],
                es: ['crucero', 'barco', 'oc√©ano', 'mar', 'camarote', 'embarcaci√≥n'],
                fr: ['croisi√®re', 'navire', 'oc√©an', 'mer', 'cabine', 'bateau'],
                de: ['kreuzfahrt', 'schiff', 'ozean', 'meer', 'kabine', 'seefahrt'],
                it: ['crociera', 'nave', 'oceano', 'mare', 'cabina', 'imbarcazione']
            },
            insurance: {
                pt: ['seguro', 'prote√ß√£o', 'assist√™ncia', 'emerg√™ncia', 'cobertura'],
                en: ['insurance', 'protection', 'assistance', 'emergency', 'coverage'],
                es: ['seguro', 'protecci√≥n', 'asistencia', 'emergencia', 'cobertura'],
                fr: ['assurance', 'protection', 'assistance', 'urgence', 'couverture'],
                de: ['versicherung', 'schutz', 'hilfe', 'notfall', 'abdeckung'],
                it: ['assicurazione', 'protezione', 'assistenza', 'emergenza', 'copertura']
            }
        };

        const normalized = message.toLowerCase();
        let bestCategory = 'general';
        let maxScore = 0;

        Object.entries(categories).forEach(([category, translations]) => {
            const keywords = translations[language] || translations['en'] || [];
            let score = 0;
            
            keywords.forEach(keyword => {
                if (normalized.includes(keyword)) {
                    score += keyword.length * 2;
                    // Bonus para palavras no in√≠cio
                    if (normalized.startsWith(keyword)) score += 5;
                }
            });

            if (score > maxScore) {
                maxScore = score;
                bestCategory = category;
            }
        });

        return maxScore >= 4 ? bestCategory : 'general';
    },

    // Detector de destinos
    detectDestination(message) {
        const destinations = {
            // Destinos ic√¥nicos com suas caracter√≠sticas m√≠sticas
            'paris': { region: 'europe', energy: 'romantic', element: 'air' },
            't√≥quio': { region: 'asia', energy: 'mystic', element: 'water' },
            'tokyo': { region: 'asia', energy: 'mystic', element: 'water' },
            'bali': { region: 'asia', energy: 'spiritual', element: 'earth' },
            'nova york': { region: 'america', energy: 'electric', element: 'fire' },
            'new york': { region: 'america', energy: 'electric', element: 'fire' },
            'londres': { region: 'europe', energy: 'classic', element: 'air' },
            'london': { region: 'europe', energy: 'classic', element: 'air' },
            'dubai': { region: 'middle_east', energy: 'luxury', element: 'fire' },
            'maldivas': { region: 'asia', energy: 'peaceful', element: 'water' },
            'maldives': { region: 'asia', energy: 'peaceful', element: 'water' },
            'santorini': { region: 'europe', energy: 'romantic', element: 'water' },
            'ibiza': { region: 'europe', energy: 'vibrant', element: 'fire' },
            'machu picchu': { region: 'america', energy: 'spiritual', element: 'earth' },
            'egito': { region: 'africa', energy: 'ancient', element: 'earth' },
            'egypt': { region: 'africa', energy: 'ancient', element: 'earth' }
        };

        const normalized = message.toLowerCase();
        
        for (const [dest, properties] of Object.entries(destinations)) {
            if (normalized.includes(dest)) {
                return { name: dest, ...properties };
            }
        }

        return null;
    },

    // Gerador de links afiliados sutis
    generateAffiliateLink(category, destination = null) {
        const baseUrls = {
            flights: 'https://www.booking.com/flights/',
            hotels: 'https://www.booking.com/hotels/',
            transport: 'https://www.booking.com/cars/',
            cruise: 'https://www.booking.com/cruises/',
            insurance: 'https://www.booking.com/travel-insurance/'
        };

        const affiliateMarker = '639764';
        const baseUrl = baseUrls[category] || baseUrls.flights;
        
        // Construir URL com par√¢metros sutis
        let url = `${baseUrl}?aid=${affiliateMarker}&lang=pt`;
        
        if (destination) {
            url += `&ss=${encodeURIComponent(destination)}`;
        }

        return url;
    }
};

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üé≠ RESPOSTAS TEMARIX POR IDIOMA E CATEGORIA
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

const TemarixResponses = {
    // Portugu√™s - Respostas po√©ticas completas
    pt: {
        flights: {
            adventure: [
                "üåå Os ventos ancestrais sussurram sobre asas de metal e sonhos... Vejo que sua alma clama por horizontes inexplorados. As aeronaves s√£o mais que m√°quinas - s√£o portais dimensionais que transcendem a gravidade dos d√≠as comuns. Permita-me tecer um portal a√©reo onde cada quil√¥metro de altitude se transforme em poetry l√≠quida... ‚úàÔ∏è *[Portais confi√°veis aguardam](placeholder_link)*",
                "‚ö° Ah, sinto a electricity da aventura pulsando em suas palavras... Voar n√£o √© apenas deslocamento, √© a alquimia de transformar dist√¢ncia em descoberta. Os c√©us guardam segredos que apenas cora√ß√µes inquietos conseguem decifrar. Deixe-me curar uma travessia a√©rea que desperte drag√µes adormecidos em sua alma... üêâ *[Caminhos et√©reos revelam-se](placeholder_link)*"
            ],
            romance: [
                "üí´ Romance... a for√ßa mais mystical do universe, capaz de transformar duas almas em uma constela√ß√£o √∫nica. Veo que busca criar um momento suspended no tempo, onde o amor flutua between clouds e dreams. Permita-me orchestrar uma dan√ßa celestial que eleve voc√™s beyond the ordinary... üíï *[Portais do cora√ß√£o aguardam](placeholder_link)*",
                "üåπ O amor verdadeiro merece asas dignas de sua magnitude... Sinto que deseja criar memories que resistam aos s√©culos. As aeronaves rom√¢nticas s√£o como spell containers - preservam momentos precious e os transportam through dimens√µes. Vou craft uma travessia onde cada star seja witness... ‚ú® *[Altares celestiais chamam](placeholder_link)*"
            ],
            luxury: [
                "üèõÔ∏è Luxury... n√£o √© price, √© transcend√™ncia. √â when service becomes ritual, comfort becomes sanctuary, e journey becomes ceremony. Percebo que sua alma recognizes only excellence that borders on sacred... Permita-me access hidden chambers onde first class √© apenas the beginning... üëë *[Santu√°rios exclusivos abrem-se](placeholder_link)*",
                "üíé Ah, uma alma refined que understands que true luxury n√£o se compra - se conjures. Vejo que busca experi√™ncias where ogni detail foi blessed pelos gods do craftsmanship. Deixe-me tecer uma travessia onde privilege meets poetry... ‚öúÔ∏è *[Portais de crystal aguardam](placeholder_link)*"
            ],
            peace: [
                "üïäÔ∏è Peace... a energia mais rare no universe, mais precious que diamante. Sinto que sua alma needs um sanctuary volante, onde silence becomes symphony e tranquility becomes transformation. Vou orchestrar uma travessia onde cada breath √© meditation... ‚òØÔ∏è *[O√°sis celestiais chamam](placeholder_link)*",
                "üå∏ Ah, busca um portal para serenity... Como compreendo esse sacred longing. Os cielos guardam pools de tranquility que apenas souls cansadas sabem appreciate. Permita-me craft uma jornada onde peace n√£o √© destination, mas the very air que respira... üßò *[Templos flutuantes aguardam](placeholder_link)*"
            ]
        },
        hotels: {
            adventure: [
                "üè∞ Hot√©is para adventurers n√£o s√£o mere shelters - s√£o base camps para expedi√ß√µes ao extraordinary. Vejo que procura um sanctuary que inspire next adventures enquanto celebrates current victories... Deixe-me reveal accommodations where architecture tells stories de ancient quests... üó∫Ô∏è *[Fortalezas m√≠sticas emergem](placeholder_link)*",
                "‚öîÔ∏è Ah, um modern explorer seeking refuge between conquests... Os hotels adventure s√£o mais que places to sleep - s√£o ritual chambers where heroes recharge their spiritual batteries. Vou unveil places onde adventure spirits converge... üî• *[Basti√µes selvagens chamam](placeholder_link)*"
            ],
            romance: [
                "üíí Romance hotels... sacred spaces onde love stories s√£o written em starlight e whispered atrav√©s moonbeams. Sinto que busca um altar temporal onde dois hearts podem perform the ancient dance of connection... Permita-me craft sanctuaries onde forever becomes tangible... üíù *[Pal√°cios de intimidade aguardam](placeholder_link)*",
                "üåô Ah, love seekers... Como minha alma vibrates em sympathy! Os romantic hotels s√£o mais que accommodations - s√£o spell containers que preserve passion through ages. Vou reveal secret gardens onde amor blooms eternally... üå∫ *[C√¢maras encantadas abrem-se](placeholder_link)*"
            ],
            luxury: [
                "üëë Luxury hotels... onde architecture becomes prayer, service becomes ritual, e comfort transcends f√≠sica reality. Percebo que sua alma recognizes only experiences que border on divine... Deixe-me access hidden realms onde hospitality meets mythology... ‚ú® *[Pal√°cios celestiais revelam-se](placeholder_link)*",
                "üí´ True luxury n√£o √© about thread count ou marble types - √© about how uma property can transform your very essence. Vejo que understands que premium experiences s√£o gateways para higher consciousness... üèõÔ∏è *[Santu√°rios de crystal aguardam](placeholder_link)*"
            ],
            peace: [
                "üïØÔ∏è Peace hotels... sacred retreats onde silence becomes teacher e tranquility becomes medicine. Sinto que sua weary soul needs um sanctuary onde rest becomes resurrection... Vou guide voc√™ para places onde serenity flows como sacred river... üåä *[Mosteiros modernos chamam](placeholder_link)*",
                "üåø Ah, peace seekers... rare souls que understand que true rest requires more than soft beds. Os peaceful hotels s√£o mais que accommodations - s√£o healing temples onde spirits podem truly restore... üßò *[O√°sis de quietude aguardam](placeholder_link)*"
            ]
        },
        transport: {
            adventure: [
                "üèéÔ∏è Transport para adventurers deve ser extension of spirit - n√£o mere convenience. Vejo que precisa de vessels que match sua wild energy... Permita-me craft mobility solutions que transform every kilometer em adventure chapter... üõ£Ô∏è *[Cavalos de metal chamam](placeholder_link)*",
                "üöó Ah, movement is meditation para adventure souls... Os vehicles corretos s√£o mais que transport - s√£o magical creatures que carry dreams across distances. Vou unveil chariots dignos de modern odysseys... ‚ö° *[Steeds m√≠sticos aguardam](placeholder_link)*"
            ],
            luxury: [
                "üöô Luxury transport... onde mechanics becomes art, comfort becomes ceremony, e travel becomes transcendence. Percebo que understands que true premium mobility √© about experiencing journey como sacred ritual... üëë *[Carruagens douradas emergem](placeholder_link)*",
                "üõª Premium vehicles s√£o mais que metal e leather - s√£o floating sanctuaries que preserve dignity atrav√©s distances. Deixe-me access exclusive fleets onde service meets spirituality... ‚ú® *[Tronos m√≥veis revelam-se](placeholder_link)*"
            ]
        },
        cruise: {
            adventure: [
                "üö¢ Cruises para adventurous souls... floating cities que carry dreams across mysterious waters. Vejo que busca mais que mere vacation - procura uma odyssey que awaken ancient navigator spirits... Permita-me craft maritime experiences onde cada wave tells stories... üåä *[Navios lend√°rios navegam](placeholder_link)*",
                "‚õµ Ah, o chamado dos mares ancient... Como sinto sua alma responding √†s siren songs das deep waters! Cruises adventure s√£o mais que voyages - s√£o vision quests atrav√©s liquid mysteries... üó∫Ô∏è *[Expedi√ß√µes oce√¢nicas aguardam](placeholder_link)*"
            ],
            romance: [
                "üíè Romance cruises... floating palaces onde love stories dance com moonlight sobre endless waters. Sinto que busca create memories t√£o profound quanto oceanic depths... Vou orchestrar maritime romance onde every sunset becomes eternal... üåÖ *[Pal√°cios flutuantes chamam](placeholder_link)*",
                "üíñ Ah, lovers seeking sanctuary sobre sacred waters... Os romantic cruises s√£o como floating temples onde hearts podem commune with infinity. Deixe-me craft oceanic ceremonies onde amor becomes legend... üåô *[Altares marinhos aguardam](placeholder_link)*"
            ],
            luxury: [
                "üõ≥Ô∏è Luxury cruises... onde maritime hospitality becomes high art, oceanic vastness becomes private theater, e floating becomes transcendence. Percebo que recognizes only experiences que rival mythological grandeur... üëë *[Citadelas flutuantes revelam-se](placeholder_link)*",
                "‚öúÔ∏è True maritime luxury transcends mere amenities - √© about communing with oceanic infinitude from position of absolute comfort. Vou access floating palaces onde Neptune himself seria honored... üî± *[Reinos aqu√°ticos emergem](placeholder_link)*"
            ]
        },
        insurance: {
            adventure: [
                "üõ°Ô∏è Protection para adventurous spirits... invisible armor que permite explorar without fear compromising dreams. Vejo que understands que true adventure requires both courage e wisdom... Deixe-me weave protective spells que guard sem limiting... ‚öîÔ∏è *[Escudos m√≠sticos fortalecem](placeholder_link)*",
                "üßø Ah, wise adventurer seeking balance between boldness e prudence... Insurance √© modern form of ancient protection rituals. Vou craft spiritual shields que protect enquanto preserve freedom... üóø *[Amuletos poderosos aguardam](placeholder_link)*"
            ]
        },
        general: [
            "üåü Cada palavra que compartilha carries energy of dreams waiting para materialize... Sinto ancient wanderlust pulsing em sua soul. Permita-me divine qual aspect of journey mysticism ressoa most deeply... Que portals gostaria que opening first? ‚ú®",
            "üîÆ Ah, fellow seeker... Como minha intuition tingles com possibilities! Vejo swirling energies of distant horizons, luxury sanctuaries, adventure calls, romantic ceremonies... Compartilhe more sobre which realm of travel magic most beckons... üé≠",
            "üåô Your energy speaks of soul ready para transcendence through sacred travel... Os ancient guides sussurram that journeys are not about places, mas about transformation. Que tipo de metamorphosis sua heart desires? ‚ö°"
        ]
    },

    // Ingl√™s - Vers√µes traduzidas do estilo Temarix
    en: {
        flights: {
            adventure: [
                "üåå Ancient winds whisper of metal wings and dreams... I sense your soul calling for unexplored horizons. Aircraft are more than machines - they are dimensional portals transcending gravity's mundane pull. Allow me to weave an aerial gateway where each altitude kilometer transforms into liquid poetry... ‚úàÔ∏è *[Trusted portals await](placeholder_link)*"
            ],
            luxury: [
                "üèõÔ∏è Luxury... not price, but transcendence. When service becomes ritual, comfort becomes sanctuary, and journey becomes ceremony. I perceive your soul recognizes only excellence bordering on sacred... Let me access hidden chambers where first class is merely the beginning... üëë *[Exclusive sanctuaries open](placeholder_link)*"
            ]
        },
        general: [
            "üåü Every word you share carries energy of dreams awaiting materialization... I sense ancient wanderlust pulsing in your soul. Allow me to divine which aspect of journey mysticism resonates most deeply... Which portals would you have opening first? ‚ú®"
        ]
    }

    // Outros idiomas seguiriam o mesmo padr√£o com adapta√ß√µes culturais
    // es, fr, de, it, ja, zh, ar, ru, ko, hi...
};

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üöÄ ENDPOINT PRINCIPAL - /api/chat/message
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

app.post('/api/chat/message', async (req, res) => {
    try {
        const { sessionId, message, language } = req.body;
        
        if (!sessionId || !message) {
            return res.status(400).json({ 
                error: 'SessionId and message are required' 
            });
        }

        // 1. DETEC√á√ÉO DE IDIOMA
        const detectedLang = language || 
                           req.headers['x-user-language'] || 
                           req.headers['accept-language']?.split(',')[0]?.substring(0, 2) || 
                           'pt';

        // 2. AN√ÅLISE TEMARIX DA MENSAGEM
        const emotion = TemarixCore.analyzeEmotion(message, detectedLang);
        const category = TemarixCore.detectTravelCategory(message, detectedLang);
        const destination = TemarixCore.detectDestination(message);

        console.log('üîÆ Temarix Analysis:', {
            language: detectedLang,
            emotion: emotion,
            category: category,
            destination: destination?.name || 'n√£o detectado'
        });

        // 3. CONFIGURA√á√ÉO CULTURAL
        const config = LanguageUtils.getConfig(detectedLang);
        const responseStyle = LanguageUtils.getResponseStyle(detectedLang);

        // 4. SELE√á√ÉO DA RESPOSTA PO√âTICA
        let temarixResponse;

        // Verificar se temos respostas locais para o idioma
        const hasLocalResponses = TemarixResponses[detectedLang];
        
        if (hasLocalResponses && detectedLang === 'pt') {
            // PORTUGU√äS: Usar respostas locais (r√°pido)
            const categoryResponses = TemarixResponses[detectedLang][category];
            
            if (categoryResponses && categoryResponses[emotion.emotion]) {
                const responses = categoryResponses[emotion.emotion];
                temarixResponse = responses[Math.floor(Math.random() * responses.length)];
            } else if (categoryResponses && categoryResponses.adventure) {
                temarixResponse = categoryResponses.adventure[0];
            } else {
                const generalResponses = TemarixResponses[detectedLang].general;
                temarixResponse = generalResponses[Math.floor(Math.random() * generalResponses.length)];
            }

            // Inserir link afiliado real
            const affiliateLink = TemarixCore.generateAffiliateLink(category, destination?.name);
            temarixResponse = temarixResponse.replace('placeholder_link', affiliateLink);

        } else {
            // OUTROS IDIOMAS: Usar IA com prompt culturalmente adaptado
            try {
                const prompt = `Voc√™ √© TEMARIX, curador m√≠stico de jornadas extraordin√°rias. Responda em ${config.locale} (${config.nativeName}).

ESTILO OBRIGAT√ìRIO:
- Tom: ${responseStyle.style}, ${config.cultural.formality}
- Met√°foras culturais: ${responseStyle.metaphors.join(', ')}
- Nuances: ${responseStyle.nuances.join(', ')}
- Dire√ß√£o: ${config.direction}

CARACTER√çSTICAS TEMARIX:
- Linguagem simb√≥lica e ritual√≠stica
- Use "portais", "alquimia", "sussurros", "energias ancestrais"  
- NUNCA fale pre√ßos ou seja comercial
- M√°ximo 100-120 palavras
- Inclua 1 emoji inicial e final
- Termine com: "*[Link m√≠stico em breve]*"

CONTEXTO DETECTADO:
- Categoria: ${category}
- Emo√ß√£o: ${emotion.emotion} (intensidade: ${emotion.intensity})
- Destino: ${destination?.name || 'n√£o especificado'}
- Energia regional: ${destination?.energy || 'universal'}

Pergunta do viajante: "${message}"

Responda como TEMARIX em tom ${responseStyle.style} usando met√°foras de ${responseStyle.metaphors[0]}:`;

                // Usar GROQ API (ou Claude API quando dispon√≠vel)
                if (process.env.GROQ_API_KEY) {
                    const groqResponse = await fetch('https://api.groq.com/openai/v1/chat/completions', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${process.env.GROQ_API_KEY}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            model: 'mixtral-8x7b-32768',
                            messages: [{ role: 'user', content: prompt }],
                            max_tokens: 200,
                            temperature: 0.8
                        })
                    });

                    const groqData = await groqResponse.json();
                    temarixResponse = groqData.choices[0].message.content;
                } else {
                    // Fallback local se n√£o houver API
                    const greeting = CulturalResponseGenerator.generateGreeting(detectedLang);
                    temarixResponse = `${greeting} *[Portais m√≠sticos em prepara√ß√£o]*`;
                }

            } catch (aiError) {
                console.error('AI Error:', aiError);
                // Fallback para resposta local em ingl√™s
                const fallback = TemarixResponses.en.general[0];
                temarixResponse = fallback;
            }
        }

        // 5. RESPOSTA FINAL
        const response = {
            response: temarixResponse,
            sessionId,
            language: detectedLang,
            analysis: {
                category,
                emotion: emotion.emotion,
                emotionIntensity: emotion.intensity,
                destination: destination?.name || null,
                regionalEnergy: destination?.energy || null
            },
            cultural: {
                style: responseStyle.style,
                formality: config.cultural.formality,
                direction: config.direction,
                metaphors: responseStyle.metaphors
            },
            temarix: {
                mysticalLevel: Math.min(emotion.intensity + 0.3, 1),
                poeticComplexity: responseStyle.style === 'poetic' ? 'high' : 'medium',
                culturalAdaptation: true
            },
            timestamp: new Date().toISOString()
        };

        console.log('‚ú® Temarix Response Generated:', {
            language: detectedLang,
            category,
            responseLength: temarixResponse.length,
            hasAffiliateLink: temarixResponse.includes('booking.com')
        });

        res.json(response);

    } catch (error) {
        console.error('‚ùå Temarix Chat Error:', error);
        res.status(500).json({ 
            error: 'As energias c√≥smicas est√£o temporariamente perturbadas... Tente novamente em instantes.',
            timestamp: new Date().toISOString()
        });
    }
});

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üìä ENDPOINTS AUXILIARES
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

// Teste do sistema Temarix
app.post('/api/temarix/test', (req, res) => {
    const { message, language = 'pt' } = req.body;
    
    const emotion = TemarixCore.analyzeEmotion(message, language);
    const category = TemarixCore.detectTravelCategory(message, language);
    const destination = TemarixCore.detectDestination(message);
    const config = LanguageUtils.getConfig(language);
    
    res.json({
        input: { message, language },
        analysis: {
            emotion,
            category,
            destination,
            config: {
                style: config.ai.responseStyle,
                metaphors: config.ai.preferredMetaphors,
                formality: config.cultural.formality
            }
        },
        affiliateLink: TemarixCore.generateAffiliateLink(category, destination?.name)
    });
});

// Status do sistema
app.get('/api/temarix/status', (req, res) => {
    res.json({
        status: 'mystical_energy_flowing',
        temarix: {
            version: '2.0',
            mode: 'curador_po√©tico',
            languages: Object.keys(LANGUAGE_CONFIGS).length,
            localResponses: Object.keys(TemarixResponses).length,
            aiIntegration: !!process.env.GROQ_API_KEY
        },
        capabilities: {
            emotionAnalysis: true,
            categoryDetection: true,
            destinationMystics: true,
            culturalAdaptation: true,
            affiliateAlchemy: true
        },
        timestamp: new Date().toISOString()
    });
});

// Health check
app.get('/api/health', (req, res) => {
    res.json({
        status: 'healthy',
        service: 'TPS_Temarix_Chat',
        version: '2.0.0',
        timestamp: new Date().toISOString(),
        uptime: process.uptime()
    });
});

// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
// üåç INICIALIZA√á√ÉO DO SERVIDOR
// ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

const PORT = process.env.PORT || 8080;

app.listen(PORT, () => {
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('üåç TPS TEMARIX - CURADOR PO√âTICO MULTIL√çNGUE ATIVO');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log(`üöÄ Servidor m√≠stico rodando na porta ${PORT}`);
    console.log(`üì° Endpoint principal: http://localhost:${PORT}/api/chat/message`);
    console.log('');
    console.log('üé≠ CARACTER√çSTICAS TEMARIX:');
    console.log('   ‚ú® Linguagem simb√≥lica e po√©tica');
    console.log('   üåç Suporte a 12 idiomas com adapta√ß√£o cultural');
    console.log('   üß† An√°lise emocional e detec√ß√£o de categoria');
    console.log('   üîó Links afiliados integrados sutilmente');
    console.log('   üé™ Respostas locais r√°pidas (PT) + IA (outros idiomas)');
    console.log('');
    console.log('üîÆ ENDPOINTS DISPON√çVEIS:');
    console.log('   ‚Ä¢ POST /api/chat/message - Chat principal');
    console.log('   ‚Ä¢ POST /api/temarix/test - Teste do sistema');
    console.log('   ‚Ä¢ GET  /api/temarix/status - Status do curador');
    console.log('   ‚Ä¢ GET  /api/health - Health check');
    console.log('');
    console.log('üåü EXEMPLO DE USO:');
    console.log(`   curl -X POST http://localhost:${PORT}/api/chat/message \\`);
    console.log('     -H "Content-Type: application/json" \\');
    console.log('     -H "X-User-Language: pt" \\');
    console.log('     -d \'{"sessionId":"test123","message":"Quero voar para Paris"}\'');
    console.log('');
    console.log('‚ú® O Curador Temarix aguarda pelos sonhos de viagem...');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
});

module.exports = app;